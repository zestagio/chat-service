# https://taskfile.dev
version: '3'

silent: true

vars:
  GO_MODULE: github.com/zestagio/chat-service
  GO_FILES:
    sh: find . -type f -name '*.go' -not -path "./vendor/*" -not -path "./internal/store/*" -not -path "*.gen.go" | tr "\n" " "

  GOLANGCI_LINT_VERSION: v1.56.2
  GOLANGCI_LINT_CACHE:
    sh: echo "$HOME/.goci/lint/cache"

  TOOLS_DIR:
    sh: echo "$(pwd)/tools"

  DEV_TOOLS: |
    entgo.io/ent/cmd/ent@v0.13.1
    github.com/daixiang0/gci@v0.13.4
    github.com/golang/mock/mockgen@v1.6.0
    github.com/deepmap/oapi-codegen/v2/cmd/oapi-codegen@v2.2.0
    github.com/kazhuravlev/options-gen/cmd/options-gen@v0.33.0
    mvdan.cc/gofumpt@v0.6.0

  TYPES: |
    ChatID
    MessageID
    ProblemID
    RequestID
    UserID
  TYPES_PKG: types
  TYPES_DST: ./internal/types/types.gen.go

  DOCKER_COMPOSE_PATHS: |
    ./deploy/local/docker-compose.yml
    ./deploy/local/docker-compose.sentry.yml
    ./deploy/local/docker-compose.swagger-ui.yml
  DOCKER_COMPOSE_CMD: docker compose -f {{ .DOCKER_COMPOSE_PATHS | trim | splitLines | join " -f " }}

  ENT_SCHEMA: ./internal/store/schema

  KEYCLOAK_REALM_PATH: ./deploy/local/bank-realm.json

  CLIENT_V1_SRC: ./api/client.v1.swagger.yml
  CLIENT_V1_DST: ./internal/server-client/v1/server.gen.go
  CLIENT_V1_PKG: clientv1

tasks:
  default:
    cmds:
      - task: tidy
      - task: fmt
      - task: lint
      - task: tests
      - task: build

  tidy:
    - echo "- Tidy"
    - go mod tidy
    - task: vendor

  vendor:
    - echo "- Vendor"
    - go mod vendor

  fmt:
    - echo "- Format"
    - export PATH="${PATH}:{{.TOOLS_DIR}}" && gofumpt -w {{.GO_FILES}}
    - export PATH="${PATH}:{{.TOOLS_DIR}}" && gci write -s standard -s default -s "Prefix({{.GO_MODULE}})" {{.GO_FILES}} 2> /dev/null

  lint:
    cmds:
      - echo "- Lint"
      - mkdir -p {{.GOLANGCI_LINT_CACHE}}
      - task: lint:cmd
        vars: {CLI_ARGS: "run --fix --timeout=5m ./..."}

  lint:cmd:
    cmds:
      - |
        docker run --rm \
          -v "$(pwd):/app" -w /app \
          -v "{{.GOLANGCI_LINT_CACHE}}:/root/.cache" \
          golangci/golangci-lint:{{.GOLANGCI_LINT_VERSION}} \
          golangci-lint {{.CLI_ARGS}}

  tests:
    cmds:
      - echo "- Tests"
      - go test -ldflags=-extldflags=-Wl,-ld_classic -race ./...

  tests:integration:
    env:
      TEST_LOG_LEVEL: info
      TEST_KEYCLOAK_REALM: Bank
      TEST_KEYCLOAK_CLIENT_ID: integration-testing
      TEST_KEYCLOAK_CLIENT_SECRET: EgtIXJ4Ztu32CpSvFi3IvrT9C8xKeaAB
      TEST_KEYCLOAK_TEST_USER: integration-testing
      TEST_KEYCLOAK_TEST_PASSWORD: integration-testing
    cmds:
      - echo "- Integration tests"
      - go test -ldflags=-extldflags=-Wl,-ld_classic -tags integration -count 1 -race ./...

  build:
    cmds:
      - echo "- Build"
      - go build ./cmd/chat-service

  dev-tools:install:
    cmds:
      - echo "- Install dev tools"
      - |
        export GOBIN="{{.TOOLS_DIR}}"
        {{ range .DEV_TOOLS | trim | splitLines -}}
        go install {{ . }}
        {{ end }}

  deps:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} up -d"

  deps:cmd:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} {{.CLI_ARGS}}"

  deps:status:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} ps"

  deps:logs:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} logs -f {{.CLI_ARGS}}"

  deps:stop:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} stop"

  deps:reset-psql:
    cmds:
      - task: deps:reset
        vars:
          SERVICE: postgres

  deps:reset:
    cmds:
      - "{{.DOCKER_COMPOSE_CMD}} rm -fsv {{.SERVICE}}"
      - "{{.DOCKER_COMPOSE_CMD}} up -d {{.SERVICE}}"

  generate:
    - echo "Run go generate..."
    - export PATH="${PATH}:{{.TOOLS_DIR}}" && go generate ./...
    - task: gen:types
    - task: ent:gen
    - task: gen:api

  ent:new:
    cmds:
      - export PATH="${PATH}:{{.TOOLS_DIR}}" && ent new --target {{.ENT_SCHEMA}} {{.CLI_ARGS}}
      - task: tidy

  ent:gen:
    cmds:
      - export PATH="${PATH}:{{.TOOLS_DIR}}" && ent generate {{.ENT_SCHEMA}}
      - task: tidy

  ent:describe:
    cmds:
      - export PATH="${PATH}:{{.TOOLS_DIR}}" && ent describe {{.ENT_SCHEMA}}

  gen:types:
    cmds:
      - echo "Generate types..."
      - go run ./cmd/gen-types {{.TYPES_PKG}} {{ .TYPES | trim | splitLines | join "," }} {{.TYPES_DST}}

  gen:api:
    cmds:
      - echo "Generate client server..."
      - export PATH="${PATH}:{{.TOOLS_DIR}}" && oapi-codegen -generate types,server,spec -package {{.CLIENT_V1_PKG}} {{.CLIENT_V1_SRC}} > {{.CLIENT_V1_DST}}
      - task: tidy

  kc:export:
    vars:
      SERVICE: keycloak
    cmds:
      - echo "Dump Keycloak Bank realm..."
      - "{{.DOCKER_COMPOSE_CMD}} exec {{.SERVICE}} /opt/keycloak/bin/kc.sh export --file /tmp/bank-realm.json --realm Bank"
      - "{{.DOCKER_COMPOSE_CMD}} cp {{.SERVICE}}:/tmp/bank-realm.json $(pwd)/deploy/local/bank-realm.json"
