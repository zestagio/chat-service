// Code generated by options-gen. DO NOT EDIT.
package wsstream

import (
	"context"
	fmt461e464ebed9 "fmt"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	endpoint string,
	origin string,
	secWsProtocol string,
	authToken string,
	eventHandler func(ctx context.Context, data []byte) error,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.endpoint = endpoint

	o.origin = origin

	o.secWsProtocol = secWsProtocol

	o.authToken = authToken

	o.eventHandler = eventHandler

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("endpoint", _validate_Options_endpoint(o)))
	errs.Add(errors461e464ebed9.NewValidationError("origin", _validate_Options_origin(o)))
	errs.Add(errors461e464ebed9.NewValidationError("secWsProtocol", _validate_Options_secWsProtocol(o)))
	errs.Add(errors461e464ebed9.NewValidationError("authToken", _validate_Options_authToken(o)))
	errs.Add(errors461e464ebed9.NewValidationError("eventHandler", _validate_Options_eventHandler(o)))
	return errs.AsError()
}

func _validate_Options_endpoint(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.endpoint, "required,url"); err != nil {
		return fmt461e464ebed9.Errorf("field `endpoint` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_origin(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.origin, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `origin` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_secWsProtocol(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.secWsProtocol, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `secWsProtocol` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_authToken(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.authToken, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `authToken` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_eventHandler(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.eventHandler, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `eventHandler` did not pass the test: %w", err)
	}
	return nil
}
