// Code generated by gonstructor --output=events.gen.go --type=NewMessageEvent --type=MessageSentEvent --type=MessageBlockedEvent --type=NewChatEvent; DO NOT EDIT.

package eventstream

import (
	"time"

	"github.com/zestagio/chat-service/internal/types"
)

func NewNewMessageEvent(
	eventID types.EventID,
	requestID types.RequestID,
	chatID types.ChatID,
	messageID types.MessageID,
	authorID types.UserID,
	createdAt time.Time,
	messageBody string,
	isService bool,
) *NewMessageEvent {
	return &NewMessageEvent{
		EventID:     eventID,
		RequestID:   requestID,
		ChatID:      chatID,
		MessageID:   messageID,
		AuthorID:    authorID,
		CreatedAt:   createdAt,
		MessageBody: messageBody,
		IsService:   isService,
	}
}

func NewMessageSentEvent(
	eventID types.EventID,
	requestID types.RequestID,
	messageID types.MessageID,
) *MessageSentEvent {
	return &MessageSentEvent{
		EventID:   eventID,
		RequestID: requestID,
		MessageID: messageID,
	}
}

func NewMessageBlockedEvent(
	eventID types.EventID,
	requestID types.RequestID,
	messageID types.MessageID,
) *MessageBlockedEvent {
	return &MessageBlockedEvent{
		EventID:   eventID,
		RequestID: requestID,
		MessageID: messageID,
	}
}

func NewNewChatEvent(
	eventID types.EventID,
	requestID types.RequestID,
	chatID types.ChatID,
	clientID types.UserID,
	canTakeMoreProblem bool,
) *NewChatEvent {
	return &NewChatEvent{
		EventID:            eventID,
		RequestID:          requestID,
		ChatID:             chatID,
		ClientID:           clientID,
		CanTakeMoreProblem: canTakeMoreProblem,
	}
}
