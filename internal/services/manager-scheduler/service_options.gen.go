// Code generated by options-gen. DO NOT EDIT.
package managerscheduler

import (
	fmt461e464ebed9 "fmt"
	"time"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
	managerpool "github.com/zestagio/chat-service/internal/services/manager-pool"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	period time.Duration,
	mngrPool managerpool.Pool,
	msgRepo messagesRepository,
	outBox outboxService,
	problemsRepo problemsRepository,
	txtor transactor,
	options ...OptOptionsSetter,
) Options {
	o := Options{}

	// Setting defaults from field tag (if present)

	o.period = period

	o.mngrPool = mngrPool

	o.msgRepo = msgRepo

	o.outBox = outBox

	o.problemsRepo = problemsRepo

	o.txtor = txtor

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("period", _validate_Options_period(o)))
	errs.Add(errors461e464ebed9.NewValidationError("mngrPool", _validate_Options_mngrPool(o)))
	errs.Add(errors461e464ebed9.NewValidationError("msgRepo", _validate_Options_msgRepo(o)))
	errs.Add(errors461e464ebed9.NewValidationError("outBox", _validate_Options_outBox(o)))
	errs.Add(errors461e464ebed9.NewValidationError("problemsRepo", _validate_Options_problemsRepo(o)))
	errs.Add(errors461e464ebed9.NewValidationError("txtor", _validate_Options_txtor(o)))
	return errs.AsError()
}

func _validate_Options_period(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.period, "min=100ms,max=1m"); err != nil {
		return fmt461e464ebed9.Errorf("field `period` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_mngrPool(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.mngrPool, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `mngrPool` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_msgRepo(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.msgRepo, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `msgRepo` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_outBox(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.outBox, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `outBox` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_problemsRepo(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.problemsRepo, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `problemsRepo` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_txtor(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.txtor, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `txtor` did not pass the test: %w", err)
	}
	return nil
}
