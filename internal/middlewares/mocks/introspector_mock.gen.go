// Code generated by MockGen. DO NOT EDIT.
// Source: keycloak_token_auth.go

// Package middlewaresmocks is a generated GoMock package.
package middlewaresmocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	keycloakclient "github.com/zestagio/chat-service/internal/clients/keycloak"
)

// MockIntrospector is a mock of Introspector interface.
type MockIntrospector struct {
	ctrl     *gomock.Controller
	recorder *MockIntrospectorMockRecorder
}

// MockIntrospectorMockRecorder is the mock recorder for MockIntrospector.
type MockIntrospectorMockRecorder struct {
	mock *MockIntrospector
}

// NewMockIntrospector creates a new mock instance.
func NewMockIntrospector(ctrl *gomock.Controller) *MockIntrospector {
	mock := &MockIntrospector{ctrl: ctrl}
	mock.recorder = &MockIntrospectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIntrospector) EXPECT() *MockIntrospectorMockRecorder {
	return m.recorder
}

// IntrospectToken mocks base method.
func (m *MockIntrospector) IntrospectToken(ctx context.Context, token string) (*keycloakclient.IntrospectTokenResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IntrospectToken", ctx, token)
	ret0, _ := ret[0].(*keycloakclient.IntrospectTokenResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IntrospectToken indicates an expected call of IntrospectToken.
func (mr *MockIntrospectorMockRecorder) IntrospectToken(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IntrospectToken", reflect.TypeOf((*MockIntrospector)(nil).IntrospectToken), ctx, token)
}
